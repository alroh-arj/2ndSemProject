@page "/register"
@using New2ndSemester.Shared
@using New2ndSemester.Client.Services
@inject HttpClient _http
@inject NavigationManager _navigationManager
@inject IUserService _userService

@* @inject NavigationManager NavigationManager *@

<PageTitle>Opret ny bruger</PageTitle>

<div class="col-6 w-100">
    <div class="d-flex align-items-center justify-content-center" style="height: 80vh;">
        <div class="text-center" style="width: 250px">
            <h1 class="mb-4 oi oi-globe" style="font-size: 6rem; color: #a9adb9;" aria-hidden="true"></h1>
            <h1 class="h3 mb-3 font-weight-normal">Opret ny bruger</h1>
            <input @bind="_username" type="text" class="form-control mb-3" placeholder="Brugernavn" required autofocus>
            <input @bind="_full_name" type="text" class="form-control mb-3" placeholder="Fulde navn" required>
            <input @bind="_password" type="password" class="form-control mb-2" placeholder="Kodeord" required>
            <input @bind="_password2" type="password" class="form-control mb-3" placeholder="Gentag kodeord" required>
            <button class="btn btn-primary btn-block" @onclick="RegisterUser">Opret</button>
            <p>@_errorText</p>
        </div>
    </div>
</div>
@code {
    private User? _user;
    private string _username = "";
    private string _full_name = "";
    private string _password = "";
    private string _password2 = "";
    private string _errorText = "";

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender == true)
        {
            var user = await _userService.GetSessionUser();

            if (user != null)
            {
                _navigationManager.NavigateTo("/"+user.id+ "/shifts");
            }
        }
    }
    
    private async void RegisterUser()
    {
        if (_password != _password2)
        {
            _errorText = "De to koder er forskellige";
            return;
        }
        
        var registerUser = new User
        {
            username = _username,
            password = _password,
            full_name = _full_name,
        };
        
        var response = await _http.PostAsJsonAsync("api/user/register", registerUser);
        
        
        if (response.IsSuccessStatusCode)
        {
            _user = await response.Content.ReadFromJsonAsync<User>();
            await _userService.SetSessionUser(_user);
            _navigationManager.NavigateTo("/"+_user.id+ "/shifts");
        }
        else
        {
            _errorText = await response.Content.ReadAsStringAsync();
            StateHasChanged();
        }
    }
}
